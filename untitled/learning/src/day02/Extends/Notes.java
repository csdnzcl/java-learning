package day02.Extends;

public class Notes {
}

/*
封装： 对象代表什么，就得封装对应的数据，并提供数据对应的行为

继承：
    类之间存在共性，并满足子类是父类一种---继承---优化代码
    关键字extends  eg: public class Student extends Person{}
    格式：public class 子类 extends 父类{}

    java只支持单继承，不支持多继承，支持多层继承（直接|间接父类）
    即一个子类只能有一个父类
    每一个类都直接或者间接继承于Object

    继承规则：
        1. 构造方法：子类都 不能 继承
        2. 成员变量：子类能 全部 继承，但私有的不能直接调用（get,set)
        3. 成员方法：只能继承非私有

    虚方法表：从最顶级父类开始，单独抽取该类中常用方法---非private, 非static, 非final---虚方法
            子类会在父类虚方法表基础上添加自己类中的虚方法
            调用方法步骤：找自己的虚方法表--> 自己所有成员方法-->父类所有成员方法(非私有)

    访问特点：
        1. 成员变量：就近原则---this, super(父类)
        2. 成员方法：直接调用--就近原则
        3. 构造方法：

    方法重写：覆盖子类虚方法表， 不会覆盖父类虚方法表
        当父类的方法不能满足子类现在的需求时， 需要进行方法重写（vs重载）
        方法上方 加上：@Override
        注意：1. 子类重写时，子类方法访问权限必须大于等于父类（空着不写 < protected < public)
             2. 只有被添加到虚方法表的方法才能被重写

     继承中：构造方法的访问特点：
        1. 不继承
        2. 子类中所有的构造方法默认先访问父类中的无参构造，再执行自己
            子类构造方法第一行默认是super();---可以不写
            如果想调用父类有参构造，必须手动写super（参数列表）进行调用
    this:一个局部变量，表示当前方法调用者的地址值
    super:父类存储空间
 */